# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'insta-bot.ui'
#
# Created by: PyQt5 UI code generator 5.15.4
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.


from PyQt5 import QtCore, QtGui, QtWidgets
from bot import InstagramBot


class Ui_MainWindow(object):
    bot = InstagramBot()

    def setupUi(self, MainWindow):

        MainWindow.setObjectName("MainWindow")
        MainWindow.resize(600, 350)
        MainWindow.setStyleSheet("background-color: rgb(26, 28, 34);")
        self.centralwidget = QtWidgets.QWidget(MainWindow)
        self.centralwidget.setObjectName("centralwidget")

        themeFile = "theme.qss"
        theme = open(themeFile, 'r').read()
        self.centralwidget.setStyleSheet(theme)

        self.slider_perfis = QtWidgets.QSlider(self.centralwidget)
        self.slider_perfis.setGeometry(QtCore.QRect(52, 204, 150, 22))
        self.slider_perfis.setMinimum(1)
        self.slider_perfis.setMaximum(5)
        self.slider_perfis.setOrientation(QtCore.Qt.Horizontal)
        self.slider_perfis.setInvertedControls(True)
        self.slider_perfis.setObjectName("slider_perfis")

        self.label_slider_perfis = QtWidgets.QLabel(self.centralwidget)
        self.label_slider_perfis.setGeometry(QtCore.QRect(230, 204, 8, 16))
        self.label_slider_perfis.setObjectName("label_slider_perfis")

        self.label_comentar_perfis = QtWidgets.QLabel(self.centralwidget)
        self.label_comentar_perfis.setGeometry(QtCore.QRect(10, 180, 275, 16))
        self.label_comentar_perfis.setObjectName("label_comentar_perfis")

        self.slider_minutos = QtWidgets.QSlider(self.centralwidget)
        self.slider_minutos.setGeometry(QtCore.QRect(385, 204, 150, 22))
        self.slider_minutos.setMinimum(1)
        self.slider_minutos.setMaximum(5)
        self.slider_minutos.setOrientation(QtCore.Qt.Horizontal)
        self.slider_minutos.setInvertedControls(True)
        self.slider_minutos.setObjectName("slider_minutos")

        self.label_slider_minutos = QtWidgets.QLabel(self.centralwidget)
        self.label_slider_minutos.setGeometry(QtCore.QRect(561, 204, 8, 16))
        self.label_slider_minutos.setObjectName("label_slider_minutos")

        self.label_comentar_minutos = QtWidgets.QLabel(self.centralwidget)
        self.label_comentar_minutos.setGeometry(
            QtCore.QRect(349, 180, 239, 16))
        self.label_comentar_minutos.setAlignment(QtCore.Qt.AlignRight)
        self.label_comentar_minutos.setObjectName("label_comentar_minutos")

        self.label_usuario = QtWidgets.QLabel(self.centralwidget)
        self.label_usuario.setGeometry(QtCore.QRect(10, 100, 600, 16))
        self.label_usuario.setObjectName("label_usuario")

        self.input_usuario = QtWidgets.QLineEdit(self.centralwidget)
        self.input_usuario.setGeometry(QtCore.QRect(130, 100, 200, 20))
        self.input_usuario.setObjectName("input_usuario")

        self.label_senha = QtWidgets.QLabel(self.centralwidget)
        self.label_senha.setGeometry(QtCore.QRect(10, 130, 600, 16))
        self.label_senha.setObjectName("label_senha")

        self.input_senha = QtWidgets.QLineEdit(self.centralwidget)
        self.input_senha.setEchoMode(QtWidgets.QLineEdit.Password)
        self.idSenha = 1
        self.input_senha.setGeometry(QtCore.QRect(130, 130, 200, 20))
        self.input_senha.setObjectName("input_senha")

        self.label_olho = QtWidgets.QLabel(self.centralwidget)
        self.label_olho.mousePressEvent = self.mascara_label_olho
        img = QtGui.QPixmap("imagens\olho_senha.png")
        img = img.scaled(QtCore.QSize(22, 11))
        self.label_olho.setPixmap(img)
        self.label_olho.setGeometry(QtCore.QRect(340, 136, 22, 11))

        self.line = QtWidgets.QFrame(self.centralwidget)
        self.line.setGeometry(QtCore.QRect(-30, 70, 661, 20))
        self.line.setFrameShape(QtWidgets.QFrame.HLine)
        self.line.setFrameShadow(QtWidgets.QFrame.Sunken)
        self.line.setObjectName("line")

        self.botao_iniciar = QtWidgets.QPushButton(self.centralwidget)
        self.botao_iniciar.setGeometry(QtCore.QRect(232, 250, 136, 40))
        self.botao_iniciar.setObjectName("botao_iniciar")
        self.botao_iniciar.clicked.connect(self.funcao_botao_iniciar)

        self.input_link = QtWidgets.QLineEdit(self.centralwidget)
        self.input_link.setEnabled(True)
        self.input_link.setGeometry(QtCore.QRect(150, 40, 300, 20))
        self.input_link.setFocusPolicy(QtCore.Qt.StrongFocus)
        self.input_link.setAlignment(QtCore.Qt.AlignCenter)
        self.input_link.setObjectName("input_link")

        self.label_link = QtWidgets.QLabel(self.centralwidget)
        self.label_link.setGeometry(QtCore.QRect(0, 0, 600, 35))
        self.label_link.setAlignment(QtCore.Qt.AlignCenter)
        self.label_link.setObjectName("label_link")

        self.label_comentando = QtWidgets.QLabel(self.centralwidget)
        self.label_comentando.setGeometry(QtCore.QRect(10, 325, 420, 15))
        self.label_comentando.setAlignment(QtCore.Qt.AlignLeft)
        self.label_comentando.setObjectName("label_comentando")

        self.label_vezes_comentadas = QtWidgets.QLabel(self.centralwidget)
        self.label_vezes_comentadas.setGeometry(
            QtCore.QRect(450, 325, 150, 15))
        self.label_vezes_comentadas.setAlignment(QtCore.Qt.AlignLeft)
        self.label_vezes_comentadas.setObjectName("label_vezes_comentadas")

        MainWindow.setCentralWidget(self.centralwidget)
        self.menubar = QtWidgets.QMenuBar(MainWindow)
        self.menubar.setGeometry(QtCore.QRect(0, 0, 574, 21))
        self.menubar.setObjectName("menubar")
        MainWindow.setMenuBar(self.menubar)

        MainWindow.setWindowTitle("Instagram Bot")
        MainWindow.setWindowIcon(QtGui.QIcon("icon.ico"))

        self.label_link.setText("Link da publicação")
        self.label_usuario.setText("Usuario/ E-mail:")
        self.label_senha.setText("Senha:")
        self.label_comentar_perfis.setText(
            "Quantidade de perfis por comentário")
        self.label_slider_perfis.setText(str(self.slider_perfis.value()))
        self.label_comentar_minutos.setText("Comentar a cada quantos minutos")
        self.label_slider_minutos.setText(str(self.slider_minutos.value()))
        self.botao_iniciar.setText("Iniciar Robô")
        self.label_comentando.setText("Comentando:")
        self.label_vezes_comentadas.setText("Vezes comentadas:")

        self.slider_perfis.valueChanged[int].connect(self.valor_slide_perfis)
        self.slider_minutos.valueChanged[int].connect(self.valor_slide_minutos)

        self.label_comentando.setText(f'Comentando: {self.bot.comentario}')
        self.label_vezes_comentadas.setText(
            f'Vezes comentadas: {self.bot.vezes_comentadas}')

    def valor_slide_perfis(self, value):
        perfis = str(self.slider_perfis.value())
        self.label_slider_perfis.setText(perfis)

    def valor_slide_minutos(self, value):
        minutos = str(self.slider_minutos.value())
        self.label_slider_minutos.setText(minutos)

    def mascara_label_olho(self, event):
        if self.idSenha == 1:
            img = QtGui.QPixmap("imagens\olho_normal.png")
            img = img.scaled(QtCore.QSize(22, 11))
            self.label_olho.setPixmap(img)
            self.input_senha.setEchoMode(QtWidgets.QLineEdit.Normal)
            self.idSenha = 0
        else:
            img = QtGui.QPixmap("imagens\olho_senha.png")
            img = img.scaled(QtCore.QSize(22, 11))
            self.label_olho.setPixmap(img)
            self.input_senha.setEchoMode(QtWidgets.QLineEdit.Password)
            self.idSenha = 1

    def funcao_botao_iniciar(self, event):
        if self.botao_iniciar.text() == "Iniciar Robô":
            self.botao_iniciar.setText('Parar Robô')

            self.bot.usuario = self.usuario
            self.bot.senha = self.senha
            self.bot.link = self.link
            self.bot.quantidade_perfis = self.slider_perfis.value()
            self.bot.comentar_cada_minuto = self.slider_minutos.value()
            self.bot.login()
        else:
            self.botao_iniciar.setText("Iniciar Robô")

    @property
    def link(self):
        return self.input_link.text()

    @property
    def usuario(self):
        return self.input_usuario.text()

    @property
    def senha(self):
        return self.input_senha.text()


if __name__ == "__main__":
    import sys
    app = QtWidgets.QApplication(sys.argv)
    MainWindow = QtWidgets.QMainWindow()
    ui = Ui_MainWindow()
    ui.setupUi(MainWindow)
    MainWindow.show()
    sys.exit(app.exec_())
